nn::hid::GetSixAxisSensorHandles(nn::hid::SixAxisSensorHandle *, int, unsigned int const&, nn::util::BitFlagSet<32, nn::hid::NpadStyleTag>)

mangled:
_ZN2nn3hid23GetSixAxisSensorHandlesEPNS0_19SixAxisSensorHandleEiRKjNS_4util10BitFlagSetILi32ENS0_12NpadStyleTagEEE

decomp:
__int64 __fastcall nn::hid::GetSixAxisSensorHandles(__int64 a1, unsigned int a2, unsigned int *a3, unsigned int a4)
{
  __int64 v5; // x0
  int v6; // [xsp+8h] [xbp-8h]
  unsigned int v7; // [xsp+Ch] [xbp-4h]

  v6 = sub_71003D9DB8(a1, &v7, a2, *a3, a4);
  if ( !v6 )
    return v7;
  v5 = sub_71003CC8C8();
  return nn::hid::StartSixAxisSensor(v5);
}





GetSixAxisSensorHandle(nn::hid::SixAxisSensorHandle *, nn::hid::BasicXpadId)

mangled:
_ZN2nn3hid22GetSixAxisSensorHandleEPNS0_19SixAxisSensorHandleENS0_11BasicXpadIdE

decomp:
__int64 __fastcall nn::hid::GetSixAxisSensorHandle(__int64 a1, unsigned int a2)
{
  __int64 result; // x0
  __int64 v3; // x0
  unsigned int v4; // w1
  unsigned int *v5; // x2
  unsigned int v6; // w3
  int v7; // [xsp+8h] [xbp-8h]

  result = sub_71003D3D08(a1, a2);
  v7 = result;
  if ( result )
  {
    v3 = sub_71003CC8C8();
    result = nn::hid::GetSixAxisSensorHandles(v3, v4, v5, v6);
  }
  return result;
}





nn::hid::StartSixAxisSensor(nn::hid::SixAxisSensorHandle const&)

mangled:
_ZN2nn3hid18StartSixAxisSensorERKNS0_19SixAxisSensorHandleE

decomp:
__int64 nn::hid::StartSixAxisSensor()
{
  __int64 result; // x0
  __int64 v1; // x0
  int v2; // [xsp+8h] [xbp-8h]

  result = sub_71003D8B38();
  v2 = result;
  if ( result )
  {
    v1 = sub_71003CC8C8();
    result = nn::hid::StopSixAxisSensor(v1);
  }
  return result;
}





nn::hid::StopSixAxisSensor(nn::hid::SixAxisSensorHandle const&)

mangled:
_ZN2nn3hid17StopSixAxisSensorERKNS0_19SixAxisSensorHandleE

decomp:
__int64 nn::hid::StopSixAxisSensor()
{
  __int64 result; // x0
  __int64 v1; // x0
  int v2; // [xsp+8h] [xbp-8h]

  result = sub_71003D60F8();
  v2 = result;
  if ( result )
  {
    v1 = sub_71003CC8C8();
    result = nn::hid::IsSixAxisSensorFusionEnabled(v1);
  }
  return result;
}





nn::hid::IsSixAxisSensorAtRest(nn::hid::SixAxisSensorHandle const&)

mangled:
_ZN2nn3hid21IsSixAxisSensorAtRestERKNS0_19SixAxisSensorHandleE

decomp:
__int64 __fastcall nn::hid::IsSixAxisSensorAtRest(__int64 a1)
{
  __int64 v2; // x0
  int v3; // [xsp+8h] [xbp-8h]
  unsigned __int8 v4; // [xsp+Ch] [xbp-4h]

  v3 = sub_71003D7D68(&v4, a1);
  if ( !v3 )
    return v4;
  v2 = sub_71003CC8C8();
  return nn::hid::debug::SetShiftAccelerometerCalibrationValue(v2);
}





nn::hid::GetSixAxisSensorState(nn::hid::SixAxisSensorState *, nn::hid::SixAxisSensorHandle const&)

mangled:
_ZN2nn3hid21GetSixAxisSensorStateEPNS0_18SixAxisSensorStateERKNS0_19SixAxisSensorHandleE

decomp:
__int64 nn::hid::GetSixAxisSensorState()
{
  __int64 result; // x0
  __int64 v1; // x0
  int v2; // [xsp+8h] [xbp-8h]

  result = sub_71003D1FD8();
  v2 = result;
  if ( result )
  {
    v1 = sub_71003CC8C8();
    result = nn::hid::GetSixAxisSensorStates(v1);
  }
  return result;
}





nn::hid::GetSixAxisSensorStates(nn::hid::SixAxisSensorState *, int, nn::hid::SixAxisSensorHandle const&)

mangled:
_ZN2nn3hid22GetSixAxisSensorStatesEPNS0_18SixAxisSensorStateEiRKNS0_19SixAxisSensorHandleE

decomp:
__int64 __fastcall nn::hid::GetSixAxisSensorStates(__int64 a1, unsigned int a2, __int64 a3)
{
  __int64 v4; // x0
  int v5; // [xsp+8h] [xbp-8h]
  unsigned int v6; // [xsp+Ch] [xbp-4h]

  v5 = sub_71003D8DC8(&v6, a1, a2, a3);
  if ( !v5 )
    return v6;
  v4 = sub_71003CC8C8();
  return nn::hid::IsSixAxisSensorAtRest(v4);
}






nn::hid::GetSixAxisSensorHandles(nn::hid::SixAxisSensorHandle *, nn::hid::SixAxisSensorHandle *, nn::hid::JoyXpadId)

mangled:
_ZN2nn3hid23GetSixAxisSensorHandlesEPNS0_19SixAxisSensorHandleES2_NS0_9JoyXpadIdE

decomp:
__int64 __fastcall nn::hid::GetSixAxisSensorHandles(__int64 a1, __int64 a2, unsigned int a3)
{
  __int64 result; // x0
  __int64 v4; // x0
  unsigned int v5; // w1
  int v6; // [xsp+8h] [xbp-8h]

  result = sub_71003D7698(a1, a2, a3);
  v6 = result;
  if ( result )
  {
    v4 = sub_71003CC8C8();
    result = nn::hid::GetSixAxisSensorHandle(v4, v5);
  }
  return result;
}